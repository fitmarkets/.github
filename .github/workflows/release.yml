name: Release

on:
  push:
    branches:
      - main
    paths-ignore:		
      - 'CHANGELOG.md'
      - '.grenrc.json'
      - '.versionrc.json'
      - 'package.json'
      - 'README.md'
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'pre-release name [alpha,beta]'
        required: false
        default: ''
      release_as:
        description: 'version to override automatic bump [major,minor,patch]'
        required: false
        default: ''
      git_tag_previous:
        description: 'git tag to override default previous tag for generated release notes'
        required: false
        default: ''

jobs:
  cut:
    name: Cut
    runs-on: ubuntu-latest
    steps:
      - name: set workflow variables for "workflow_dispatch" trigger
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "prerelease=${{ github.event.inputs.prerelease }}" >> $GITHUB_ENV;
          echo "release_as=${{ github.event.inputs.release_as }}" >> $GITHUB_ENV;
          echo "git_tag_previous=${{ github.event.inputs.git_tag_previous }}" >> $GITHUB_ENV;

      - name: set workflow variables
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          echo "prerelease=" >> $GITHUB_ENV;
          echo "release_as=" >> $GITHUB_ENV;
          echo "git_tag_previous=" >> $GITHUB_ENV;

      - name: fetch secrets
        uses: google-github-actions/get-secretmanager-secrets@main
        id: secrets
        with:
          credentials: ${{ secrets.GCP_SA_GITHUBACTIONS_KEY }}
          secrets: |-
            GITHUB_PAT_FITMARKETSBOT:fmprd-secrets/GITHUB_PAT_FITMARKETSBOT

      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ steps.secrets.outputs.GITHUB_PAT_FITMARKETSBOT }}

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: install yarn
        run: npm install -g yarn

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache npm modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn install

      - name: run tests
        run: yarn test:ci

      - name: run release
        run: |
          yarn release >> yarn_release
          cat yarn_release
          echo "$(cat yarn_release | grep GIT_TAG_LATEST)" >> $GITHUB_ENV
        env:
          REF: ${{ env.GITHUB_REF }}
          RELEASE_AS: ${{ env.release_as }}
          PRERELEASE: ${{ env.prerelease }}
          GIT_TAG_PREVIOUS: ${{ env.git_tag_previous }}
          GREN_GITHUB_TOKEN: ${{ steps.secrets.outputs.GITHUB_PAT_FITMARKETSBOT }}
          GIT_USER_EMAIL: 'bot@fitmarkets.co'
          GIT_USER_NAME: 'fitmarketsbot'
